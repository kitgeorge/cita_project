#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/actions/jres_finder.hpp
axsym_funcs.hpp
../include/actions/axsym_funcs.hpp
mapXVtoAA2D.hpp
../include/actions/mapXVtoAA2D.hpp

../include/basis_functions/bfe.hpp
gamma.hpp
../include/basis_functions/gamma.hpp
units.hpp
../include/basis_functions/units.hpp
comp_funcs.hpp
../include/basis_functions/comp_funcs.hpp
complex
-
cassert
-

../include/basis_functions/potential_from_density.hpp
bfe.hpp
../include/basis_functions/bfe.hpp
add_functions.hpp
../include/basis_functions/add_functions.hpp
comp_funcs.hpp
../include/basis_functions/comp_funcs.hpp
flatten.hpp
../include/basis_functions/flatten.hpp
execute_in_parallel.hpp
../include/basis_functions/execute_in_parallel.hpp

../include/multithreading/execute_in_parallel.hpp
boost/asio/thread_pool.hpp
-
boost/asio.hpp
-
functional
-
thread
-
vector
-
optional
-

../include/potential/axsym_funcs.hpp
potential_funcs.hpp
../include/potential/potential_funcs.hpp
units.hpp
../include/potential/units.hpp
NewtonRaphson.hpp
../include/potential/NewtonRaphson.hpp

../include/potential/mestel.hpp
cmath
-
functional
-
potential_funcs.hpp
../include/potential/potential_funcs.hpp
force.hpp
../include/potential/force.hpp
units.hpp
../include/potential/units.hpp
axsym_funcs.hpp
../include/potential/axsym_funcs.hpp

../include/potential/mestel_spiral.hpp
units.hpp
../include/potential/units.hpp
mestel.hpp
../include/potential/mestel.hpp
jres_finder.hpp
../include/potential/jres_finder.hpp
execute_in_parallel.hpp
../include/potential/execute_in_parallel.hpp
complex
-
array
-
numbers
-
optional
-

../include/potential/potential_funcs.hpp
force.hpp
../include/potential/force.hpp
coords.hpp
../include/potential/coords.hpp
add_functions.hpp
../include/potential/add_functions.hpp
array
-
assert.h
-

../include/rc/NewtonRaphson.hpp
stdlib.h
-
vector
-
math.h
-
ctype.h
-
utils.hpp
../include/rc/utils.hpp

../include/rc/coordinate.hpp
stdlib.h
-

../include/rc/force.hpp
stdlib.h
-

../include/rc/galaxy.hpp
units.hpp
../include/rc/units.hpp

../include/rc/mapXVtoAA2D.hpp
stdlib.h
-
cstdio
-
iostream
-
iomanip
-
vector
-
math.h
-
assert.h
-
complex
-
functional
-
pi.hpp
../include/rc/pi.hpp
units.hpp
../include/rc/units.hpp
galaxy.hpp
../include/rc/galaxy.hpp
utils.hpp
../include/rc/utils.hpp
potential.hpp
../include/rc/potential.hpp
NewtonRaphson.hpp
../include/rc/NewtonRaphson.hpp
math_RC.hpp
../include/rc/math_RC.hpp
axsym_funcs.hpp
../include/rc/axsym_funcs.hpp

../include/rc/math_RC.hpp
stdlib.h
-
vector
-
limits
-
math.h
-
assert.h
-
complex
-
numeric
-
utils.hpp
../include/rc/utils.hpp

../include/rc/pi.hpp

../include/rc/potential.hpp
stdlib.h
-
math.h
-
galaxy.hpp
../include/rc/galaxy.hpp
force.hpp
../include/rc/force.hpp
coordinate.hpp
../include/rc/coordinate.hpp
NewtonRaphson.hpp
../include/rc/NewtonRaphson.hpp

../include/rc/units.hpp
string
-
pi.hpp
../include/rc/pi.hpp

../include/rc/utils.hpp
stdlib.h
-
cstdlib
-
vector
-
string
-
iostream
-
fstream
-
sstream
-
iomanip
-
numeric
-
cassert
-
cmath
-
ctime
-
limits
-
sys/stat.h
-
stdexcept
-
pi.hpp
../include/rc/pi.hpp

../include/special_functions/gamma.hpp
functional
-
numbers
-
cmath
-
boost/math/special_functions/gamma.hpp
-

../include/utility/add_functions.hpp
functional
-
iostream
-
complex
-

../include/utility/comp_funcs.hpp
functional
-
complex
-
array
-

../include/utility/flatten.hpp
vector
-
iostream
-
cstdlib
-
shape.hpp
../include/utility/shape.hpp

../include/utility/shape.hpp
vector
-
csignal
-
iostream
-
array
-

../include/utility/vector_io.hpp
vector
-
string
-
fstream
-

../include/vectors/coords.hpp
array
-
vector
-
cmath
-
numbers
-

/home/kit/Documents/cita_project/src/basis_functions/bfe.test.cpp
bfe.hpp
/home/kit/Documents/cita_project/src/basis_functions/bfe.hpp
potential_from_density.hpp
/home/kit/Documents/cita_project/src/basis_functions/potential_from_density.hpp
gtest/gtest.h
/home/kit/Documents/cita_project/src/basis_functions/gtest/gtest.h
vector_io.hpp
/home/kit/Documents/cita_project/src/basis_functions/vector_io.hpp
flatten.hpp
/home/kit/Documents/cita_project/src/basis_functions/flatten.hpp
comp_funcs.hpp
/home/kit/Documents/cita_project/src/basis_functions/comp_funcs.hpp
mestel_spiral.hpp
/home/kit/Documents/cita_project/src/basis_functions/mestel_spiral.hpp
execute_in_parallel.hpp
/home/kit/Documents/cita_project/src/basis_functions/execute_in_parallel.hpp
optional
-

